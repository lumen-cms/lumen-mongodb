type File{
    url:String
    key:String
    id:String
    name:String
    contentType: String
    size: Int
    width: Int
    height: Int
}

type FileMetaPayload{
    articlesPreviewImages:[String]
}

type FilePayload{
    url:String
    key:String
    id:String
    name:String
    contentType: String
    size: Int
    width: Int
    height: Int
    origin: String
    _meta: FileMetaPayload
}


input FileInput{
    url:String!
    key:String!
    size: Int!
    contentType: String!
    name:String
    width: Int
    height: Int
    origin: String
}

input FileMutateInput{
    id:String!
}

input FindFilesInput {
    id:RootStringFilter
    url:RootStringFilter
    name:RootStringFilter
    key:RootStringFilter
    AND:[FindFilesInput]
    OR:[FindFilesInput]
    NOR:[FindFilesInput]
}

type Mutation {
    filesUpdateOne(where:FileMutateInput!,data:FileInput!): UpdateOnePayload! @MongoUpdateOne
    filesCreateOne(data:FileInput!): InsertOnePayload! @MongoCreateOne
    filesDeleteOne(where:FileMutateInput!): DeleteOnePayload! @MongoDeleteOne
}

type Query {
    files(where:FindFilesInput):[FilePayload!] @MongoFind
}