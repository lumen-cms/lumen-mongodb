type Author {
    name:String
    id:String
    file:File
}

input ArticlePreviewImageInput{
    id:String!
    url:String!
    key:String!
    width:Int
    height:Int
    name:String!
}

type ArticlePreviewImage{
    id:String!
    url:String!
    key:String!
    width:Int
    height:Int
    name:String!
}

type Article{
    _id: String
    id: String
    projectId:String
    createdBy:String
    slug: SlugPath
    description: String
    title: String
    deleted: Boolean
    metaTitle: String
    teaser: String
    keywords: String
    published: Boolean
    publishedDate: GraphQLDateTime
    languageKey: String
    isBlogEntry: Boolean
    createdAt: GraphQLDateTime
    updatedAt: GraphQLDateTime
    contentElements:[Content!]
    authors: [Author!]
    tags:[TagTypeForeignField!]
    gallery:[File!]
    previewImage:ArticlePreviewImage
}

input ArticleInput{
    title: String!
    slug: SlugPath!
    languageKey: String!
    description: String
    deleted: Boolean
    metaTitle: String
    teaser: String
    keywords: String
    published: Boolean
    publishedDate: GraphQLDateTime
    isBlogEntry: Boolean
    previewImage:ArticlePreviewImageInput
    authorsIds:[String]
    tags:[TagInputForeignField]
    contentElements:[ContentInput!]
}
input ArticleInputUpdate{
    title: String
    slug: SlugPath
    languageKey: String
    description: String
    deleted: Boolean
    metaTitle: String
    teaser: String
    keywords: String
    published: Boolean
    publishedDate: GraphQLDateTime
    isBlogEntry: Boolean
    previewImage:ArticlePreviewImageInput
    authorsIds:[String]
    tags:[TagInputForeignField]
    contentElements:[ContentInput!]
}

type ArticleListPayload{
    id:String
    slug: SlugPath
    title: String
    deleted: Boolean
    languageKey:String
    published: Boolean,
    previewImage:ArticlePreviewImage
}


input FindArticlesInput {
    id:RootStringFilter
    slug:RootStringFilter
    title:RootStringFilter
    languageKey:RootStringFilter
    published:RootStringFilter
    deleted:RootStringFilter
    AND:[FindArticlesInput]
    OR:[FindArticlesInput]
    NOR:[FindArticlesInput]
}


input DeleteArticleInput{
    id:String!
}

input DeleteManyArticleInput{
    ids:[String!]!
}

type ArticlePayload{
    id:String!
}

input ArticleWhereInput{
    slug:String
    id:String
}
