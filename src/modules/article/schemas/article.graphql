type Author {
    name:String
    id:String
    file:File
}

type Category{
    id: String
    title: String
    slug: String
    languageKey: String
    createdAt: Date
    updatedAt: Date
}

type Article{
    _id: String
    id: String
    projectId:String
    createdBy:String
    slug: SlugPath
    description: String
    title: String
    deleted: Boolean
    metaTitle: String
    teaser: String
    keywords: String
    published: Boolean
    publishedDate: GraphQLDateTime
    languageKey: String
    isBlogEntry: Boolean
    createdAt: GraphQLDateTime
    updatedAt: GraphQLDateTime
    contentElements:[Content!]
    authors: [Author!]
    categories:[Category!]
    gallery:[File!]
    previewImage:File
}

input ArticleInput{
    title: String!
    slug: SlugPath!
    languageKey: String!
    description: String
    deleted: Boolean
    metaTitle: String
    teaser: String
    keywords: String
    published: Boolean
    publishedDate: Date
    isBlogEntry: Boolean
    authorsIds:[String]
    categoriesIds:[String]
    contentElements:[ContentInput!]
}

type ArticleListPayload{
    id:String
    slug: SlugPath
    title: String
    deleted: Boolean
    languageKey:String
    published: Boolean
}

input DeleteArticleInput{
    id:String!
}

input DeleteManyArticleInput{
    ids:[String!]!
}

type ArticlePayload{
    id:String!
}

input ArticleWhereInput{
    slug:String
    id:String
}
