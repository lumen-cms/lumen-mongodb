type PageTemplate{
    body:String
    bodyJson:JSON
    key:String!
    languageKey:String!
    title:String!
    type:String!
}

input PageTemplateInput{
    body:String
    bodyJson:JSON
    key:String!
    languageKey:String!
    title:String!
    type:String!
}

input FindPageTemplatesInput {
    id:RootStringFilter
    title:RootStringFilter
    type:RootStringFilter
    key:RootStringFilter
    AND:[FindTagsInput]
    OR:[FindTagsInput]
    NOR:[FindTagsInput]
}

input ModifyPageTemplateInput{
    id:String
}



type Query {
    pageTemplates(where:FindPageTemplatesInput!): [PageTemplate] @MongoFind
}

type Mutation{
    pageTemplatesCreateOne(data:PageTemplateInput!): InsertOnePayload! @MongoCreateOne
    pageTemplatesDeleteOne(where:ModifyPageTemplateInput!):DeleteOnePayload! @MongoDeleteOne
    pageTemplatesUpdateOne(where:ModifyPageTemplateInput!, data:PageTemplateInput!):UpdateOnePayload! @MongoUpdateOne
}